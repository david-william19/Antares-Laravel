'use strict';

/**
* Antares Repository Interface NodeJS client (arix and arion)
**/
var request = require('request');
var x2j = require('./antaresXmlToJson.js');

const _headers = {
    "content-type": "application/x-www-form-urlencoded",
};
const _arixEndpoint = 'https://arix.datenbank-bildungsmedien.net';
const _arionEndpoint = 'https://arion.datenbank-bildungsmedien.net';
const _postVarXML = 'xmlstatement';
const _postVarJson = 'json';

var _url = _arixEndpoint; // default
var _postVar = _postVarXML;
var _context = 'HH/HH/9999'; // default for test purposes

var internals = {};
var externals = {};

/** sends a request to the Antares API **/
internals.req = (method, headers, form, callback) => {
  request({
    url: _url,
    method: method,
    headers: headers,
    form: form,
  }, callback);
};

/** just for test purposes !! **/
internals.standartFunc = (error, response, body) => {
    console.log(body);
};



/**********************************************/

/** sets the url to the currect Antares Endpoint
* available modes: arix (XML), arion (JSON)
**/
externals.setMode = (mode) => {
  switch(mode) {
    case 'arix' : _url = _arixEndpoint; _postVar = _postVarXML; break;
    case 'arion' : _url = _arionEndpoint; _postVar = _postVarJson; break;
    default: console.log('No valid endpoint mode');
  }
};

/** sets the context for the antares search **/
externals.setContext = (context) => {
  _context = context;
};

/** search a word in the whole content **/
externals.search = (query, callback) => {
  var searchContent; // todo: export xml dynamically to json (antaresXmlToJson.js)
  if (_postVar == _postVarXML) {
    searchContent = '<search fields="text,titel"><condition field="text_fields">' + query + '</condition></search>';
  } else {
    searchContent = {
       "if": "search",
       "a": {
            "fields": "text,titel"
       },
       "c": {
            "if": "condition",
            "a": {
                 "field": "text_fields"
            },
            "c": query
       }
     };
  }

  var form = {'context': _context};
  form[_postVar] = searchContent;
  internals.req('POST', _headers, form, callback);
};

/* search for a title in the whole content **/
externals.searchTitle = (query, callback) => {
  var searchContent; // todo: export xml dynamically to json (antaresXmlToJson.js)
  if (_postVar == _postVarXML) {
    searchContent = '<search fields="text,titel"><condition field="titel_fields">' + query + '</condition></search>';
  } else {
    searchContent = {
       "if": "search",
       "a": {
            "fields": "text,titel"
       },
       "c": {
            "if": "condition",
            "a": {
                 "field": "titel_fields"
            },
            "c": query
       }
   };
  }

  var form = {'context': _context};
  form[_postVar] = searchContent;
  internals.req('POST', _headers, form, callback);
};

/** checks the current connection with the endpoint **/
externals.checkConnection = () => {
  // gets a random data entry from the Antares content
  var recordForm;
  if (_postVar == _postVarXML) {
    recordForm = {'context': _context , 'xmlstatement': '<record identifier="SHPOOL-22580" />'};
  } else {
    recordForm = {
       "if": "record",
       "a": {
            "identifier": "SHPOOL-22580"
       }
    };
  }
  internals.req('POST', _headers, recordForm, () => {
    console.log('Connection enabled!');
  });
};

module.exports = externals;
